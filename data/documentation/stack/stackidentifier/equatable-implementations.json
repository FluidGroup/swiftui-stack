{"variants":[{"paths":["\/documentation\/stack\/stackidentifier\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Stack\/documentation\/Stack\/StackIdentifier\/Equatable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/Stack\/documentation\/Stack\/StackIdentifier\/!=(_:_:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"Stack"}],"role":"collectionGroup","title":"Equatable Implementations"},"hierarchy":{"paths":[["doc:\/\/Stack\/documentation\/Stack","doc:\/\/Stack\/documentation\/Stack\/StackIdentifier"]]},"references":{"doc://Stack/documentation/Stack/StackIdentifier":{"role":"symbol","title":"StackIdentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackIdentifier"}],"abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/StackIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StackIdentifier"}],"url":"\/documentation\/stack\/stackidentifier"},"doc://Stack/documentation/Stack":{"role":"collection","title":"Stack","abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack","kind":"symbol","type":"topic","url":"\/documentation\/stack"},"doc://Stack/documentation/Stack/StackIdentifier/!=(_:_:)":{"role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Stack\/documentation\/Stack\/StackIdentifier\/!=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/stack\/stackidentifier\/!=(_:_:)"}}}